{"version":3,"sources":["components/List.js","components/Input.js","components/Label.js","components/Spiner.js","App.js","index.js"],"names":["list","props","headings","date","milisecond","Date","day","getDate","month","getMonth","year","getFullYear","berCheck","element","scrapDate","setMilliseconds","status","palletList","newPalletList","state","archive","filter","item","searchQuery","itemSearch","valueSearch","deleted","className","forEach","push","key","_id","adviceNumber","customer","meterType","qty","palletNumber","trolleyNumber","jobNo","updateDate","description","location1","location2","location3","onClick","e","printButton","toString","icon","faPrint","updateItem","faEdit","delete","faTrashAlt","addPalletButton","faPlus","search","faSearch","name","type","value","onChange","handleChange","handleArchive","Input","this","placeholder","maxLength","min","max","backButton","faArrowLeft","updateButtonVisible","updateConfirme","updateConfirm","faCheck","addPallet","React","Component","List","console","log","override","css","AwesomeComponent","loading","setState","spinnerState","size","color","require","Stitch","RemoteMongoClient","AnonymousCredential","client","initializeDefaultAppClient","db","getServiceClient","factory","auth","loginWithCredential","App","colection","spinner","listVisible","printVisible","updateItemNo","clearInput","addMonth","a","collection","find","toArray","then","adviceNumberCounter","updateOne","scrapCheck","id","return_value","prompt","callFunction","insertOne","owner_id","user","pullList","window","alert","limit","setTimeout","deleteItem","print","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19cd808e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt , faPrint , faEdit , faPlus , faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst list = (props) =>{\r\n\r\n    const date = (milisecond) =>{\r\n\r\n\r\n        if(milisecond == null || undefined){\r\n            return (\"No Update\")\r\n        } else {\r\n      \r\n        let date = new Date(milisecond);\r\n     \r\n        let day = date.getDate();\r\n        let month = date.getMonth()+1;\r\n        let year = date.getFullYear();\r\n        let finalDate = `${day}/${month}/${year}`;\r\n        return(finalDate)\r\n        }\r\n    }\r\n\r\n    const berCheck = (element)=>{\r\n        return  \"\" + (element.scrapDate < new Date().setMilliseconds(0) && element.status === \"BER\" ? \"ber\" : \"\" )\r\n    }\r\n\r\n    let palletList = [...props.palletList];\r\n\r\n    let newPalletList = [];\r\n    let headings ;\r\n    let list = [];\r\n\r\n    if(props.state.archive === true){\r\n        newPalletList = palletList.filter(item=> item[`${props.state.searchQuery.itemSearch}`] === props.state.searchQuery.valueSearch && item.deleted === true)\r\n\r\n        headings = <ul className=\"headings\"><li><p>Advice Number</p> <p>Customer</p> <p>Meter Type</p> <p>Quantity</p> <p>Pallet Number</p> <p>Trolley Number</p> <p>Job Number</p> <p>Status</p> <p>Create Date</p> <p>Scrap Date BER</p> <p>Update Date</p> <p>Description</p> <p>Location</p></li></ul>\r\n        newPalletList.forEach(element => {\r\n        list.push(<li className={berCheck(element)} key={element._id}><p>{element.adviceNumber}</p> <p>{element.customer}</p> <p>{element.meterType}</p> <p>{element.qty}</p> <p>{element.palletNumber}</p> <p>{element.trolleyNumber}</p> <p>{element.jobNo}</p> <p>{element.status}</p> <p>{date(element.date)}</p> <p>{date(element.scrapDate)}</p> <p>{date(element.updateDate)}</p> <p>{element.description}</p> <p>{element.location1}/{element.location2}/{element.location3}</p><div className=\"buttons\"><button onClick={(e)=>{props.printButton(e,element._id.toString())}}><FontAwesomeIcon icon={faPrint} /></button></div></li>)\r\n    });\r\n    } else if(props.state.archive === false){\r\n        newPalletList = palletList.filter(item=> item[`${props.state.searchQuery.itemSearch}`] === props.state.searchQuery.valueSearch && item.deleted === false)\r\n\r\n        headings = <ul className=\"headings\"><li><p>Advice Number</p> <p>Customer</p> <p>Meter Type</p> <p>Quantity</p> <p>Pallet Number</p> <p>Trolley Number</p> <p>Job Number</p> <p>Status</p> <p>Create Date</p> <p>Scrap Date BER</p> <p>Update Date</p> <p>Description</p> <p>Location</p></li></ul>\r\n        newPalletList.forEach(element => {\r\n        list.push(<li className={berCheck(element)} key={element._id}><p>{element.adviceNumber}</p> <p>{element.customer}</p> <p>{element.meterType}</p> <p>{element.qty}</p> <p>{element.palletNumber}</p> <p>{element.trolleyNumber}</p> <p>{element.jobNo}</p> <p>{element.status}</p> <p>{date(element.date)}</p> <p>{date(element.scrapDate)}</p> <p>{date(element.updateDate)}</p> <p>{element.description}</p> <p>{element.location1}/{element.location2}/{element.location3}</p><div className=\"buttons\"><button onClick={(e)=>{props.updateItem(e,element._id.toString())}}><FontAwesomeIcon icon={faEdit} /></button><button onClick={(e)=>{props.delete(e,element._id.toString())}}><FontAwesomeIcon icon={faTrashAlt} /></button><button onClick={(e)=>{props.printButton(e,element._id.toString())}}><FontAwesomeIcon icon={faPrint} /></button></div></li>)\r\n    });\r\n    }\r\n\r\n    return(\r\n        <div className=\"List\">\r\n            <>\r\n            <div className=\"topBar\">\r\n                <div className=\"searchField\">\r\n                <button className=\"addButton\" onClick={(e)=>{props.addPalletButton()}}><FontAwesomeIcon icon={faPlus}/></button>\r\n                <button className=\"searchButton\" onClick={(e)=>{props.search()}}><FontAwesomeIcon icon={faSearch}/></button>\r\n                <select className=\"searchSelect\" name=\"search\" type=\"select\" value={props.state.search} onChange={props.handleChange}>\r\n                        <option value=\"\">All</option>\r\n                        <option value=\"Macquarie BG\">Macquarie BG</option>\r\n                        <option value=\"Meterfit BG\">Meterfit BG</option>\r\n                        <option value=\"SSE\">SSE</option>\r\n                        <option value=\"Meterfit Eon\">Meterfit Eon</option>\r\n                        <option value=\"Macquarie Eon\">Macquarie Eon</option>\r\n                        <option value=\"5299\">5299 ( 140mm )</option>\r\n                        <option value=\"5394\">5394 ( 120mm )</option>\r\n                        <option value=\"5424\">5424 ( 100mm )</option>\r\n                        <option value=\"Compleated\">Compleated</option>\r\n                        <option value=\"Awaiting\">Awaiting</option>\r\n                        <option value=\"Inprogress\">Inprogress</option>\r\n                        <option value=\"BER\">BER</option>\r\n                        <option value=\"Ready to be shipped\">Ready to be shipped</option>\r\n                        <option value=\"Parts\">Parts</option>\r\n                        {/* <option value=\"Deleted\">DELETED</option> */}\r\n                </select>\r\n                <>\r\n                <label>Archive</label>\r\n                <input className=\"checkButton\" name=\"archive\" type=\"checkbox\" onChange={props.handleArchive} value={props.state.archive}></input>\r\n                </>\r\n            </div>\r\n            {headings}\r\n            </div>\r\n                <ul className=\"element\">{list}</ul>\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default list;\r\n\r\n//customer: 'Macquarie' , meterType: \"5299\" , qty: 100 , palletNumber: 120 , trolleyNumber : 100 , status : \"read to go\" , data: new Date().toDateString() , location : \"10-10-10\"","import React from 'react';\r\nimport './Input.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft , faPlus, faCheck } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Input extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div className=\"Input\">  \r\n                <label>\r\n                <p className=\"inputLabel\">Customer:</p>\r\n                    <select name=\"customer\" value={this.props.state.customer} onChange={this.props.handleChange}>\r\n                        <option value=\"\"></option>\r\n                        <option value=\"Macquarie BG\">Macquarie BG</option>\r\n                        <option value=\"Meterfit BG\">Meterfit BG</option>\r\n                        <option value=\"SSE\">SSE</option>\r\n                        <option value=\"Meterfit Eon\">Meterfit Eon</option>\r\n                        <option value=\"Macquarie Eon\">Macquarie Eon</option>\r\n                        <option value=\"Parts\">Parts</option>\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                <p className=\"inputLabel\">Meter Type:</p>\r\n                    <select name=\"meterType\" value={this.props.state.meterType} onChange={this.props.handleChange}>\r\n                        <option value=\"\"></option>\r\n                        <option value=\"5299\">5299 ( 140mm )</option>\r\n                        <option value=\"5394\">5394 ( 120mm )</option>\r\n                        <option value=\"5424\">5424 ( 100mm )</option>\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                <p className=\"inputLabel\">Quantity:</p>\r\n                    <input name=\"qty\" type=\"number\" value={this.props.state.qty} onChange={this.props.handleChange} placeholder=\"Quantity\">\r\n                        \r\n                    </input>\r\n                </label>\r\n                <label>\r\n                <p className=\"inputLabel\">Pallet Number:</p>\r\n                    <input name=\"palletNumber\" type=\"number\" value={this.props.state.palletNumber} onChange={this.props.handleChange} placeholder=\"Pallet Number\">\r\n                        \r\n                    </input>\r\n                </label>\r\n                <label>\r\n                <p className=\"inputLabel\">Trolley Number:</p>\r\n                    <input name=\"trolleyNumber\" type=\"number\" value={this.props.state.trolleyNumber} onChange={this.props.handleChange} placeholder=\"Trolley Number\"></input>\r\n                </label>\r\n                <label>\r\n                <p className=\"inputLabel\">Job Number:</p>\r\n                    <input name=\"jobNo\" type=\"number\" value={this.props.state.jobNo} onChange={this.props.handleChange} placeholder=\"Job Number\"></input>\r\n                </label>\r\n                <label>\r\n                <p className=\"inputLabel\">Status:</p>\r\n                    <select name=\"status\" value={this.props.state.status} onChange={this.props.handleChange}>\r\n                        <option value=\"\"></option>\r\n                        <option value=\"Compleated\">Compleated</option>\r\n                        <option value=\"Awaiting\">Awaiting</option>\r\n                        <option value=\"BER\">BER</option>\r\n                        <option value=\"Inprogress\">Inprogress</option>\r\n                        <option value=\"Ready to be shipped\">Ready to be shipped</option>\r\n\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                <p className=\"inputLabel\">Description:</p>\r\n                    <input name=\"description\" value={this.props.state.description} onChange={this.props.handleChange} placeholder=\"Description\" maxLength=\"200\">\r\n                        \r\n                    </input>\r\n                </label>\r\n                <label>\r\n                    <form>\r\n                    <p className=\"inputLabel\">Location:</p>\r\n                        <input className=\"inputLoc\" type=\"number\" name=\"location1\" value={this.props.state.location1} onChange={this.props.handleChange} min=\"1\" max=\"20\"></input>\r\n                        <input className=\"inputLoc\" type=\"number\" name=\"location2\" value={this.props.state.location2} onChange={this.props.handleChange} min=\"1\" max=\"20\"></input>\r\n                        <input className=\"inputLoc\" type=\"number\" name=\"location3\" value={this.props.state.location3} onChange={this.props.handleChange} min=\"1\" max=\"20\"></input>\r\n                    </form>\r\n                </label>\r\n                <button onClick={(e)=>{this.props.backButton(this.props.backButton)}}><FontAwesomeIcon icon={faArrowLeft}/></button>\r\n                {this.props.updateButtonVisible ? <button onClick={(e)=>{this.props.updateConfirme(this.props.updateConfirm)}}><FontAwesomeIcon icon={faCheck}/></button> : <button onClick={(e)=>{this.props.addPallet()}}><FontAwesomeIcon icon={faPlus}/></button>}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default Input;","import React from 'react';\r\nimport './Label.css'\r\n\r\n\r\nconst List = (props)=>{\r\n\r\n    const date = (milisecond) =>{\r\n      \r\n        let date = new Date(milisecond);\r\n     \r\n        let day = date.getDate();\r\n        let month = date.getMonth()+1;\r\n        let year = date.getFullYear();\r\n        let finalDate = `${day}/${month}/${year}`;\r\n        return(finalDate)\r\n    }\r\n\r\n    return(<>\r\n            {console.log(props.state.scrapDate)}\r\n        <div className=\"label\">\r\n            <div className=\"advice\">{props.state.adviceNumber}</div>\r\n            <div className=\"eref\">E-REF</div>\r\n            {/* <div className=\"ownerLabel\">OWNER:</div>\r\n            <div className=\"owner\">E-Macquarie</div> */}\r\n            <div className=\"customerLabel\">CUSTOMER :</div>\r\n            <div className=\"customer\">{props.state.customer}</div>\r\n            <div className=\"meterTypeLabel\">METER TYPE :</div>\r\n            <div className=\"meterType\">{props.state.meterType}</div>\r\n            <div className=\"status\">{props.state.status}</div>\r\n            <div className=\"qtyLabel\">QTY :</div>\r\n            <div className=\"qty\">{props.state.qty}</div>\r\n            <div className=\"trolleyNumberLabel\">TROL NO :</div>\r\n            <div className=\"trolleyNumber\">{props.state.trolleyNumber}</div>\r\n            <div className=\"palletNumberLabel\">PALLET NO :</div>\r\n            <div className=\"palletNumber\">{props.state.palletNumber}</div>\r\n            <div className=\"description\">{props.state.description}</div>\r\n            <div className=\"dateLabel\">Create Date :</div>\r\n            <div className=\"date\">{date(props.state.date)}</div>\r\n            <div className=\"scrapDateLabel\">SCRAP Date :</div>\r\n            <div className=\"scrapDate\">{props.state.scrapDate === null ? \"\" : date(props.state.scrapDate)}</div>\r\n            <div className=\"authorLabel\">Author :</div>\r\n            <div className=\"author\">Damian Krawczyk</div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default List;","import React from 'react';\r\nimport { css } from \"@emotion/core\";\r\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\r\nimport './Spiner.css'\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 50vh auto;\r\n  border-color: red;\r\n`;\r\n\r\nclass AwesomeComponent extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        loading: true,\r\n      };\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({loading: props.spinnerState})\r\n      }\r\n   \r\n    render() {\r\n      return (\r\n        <div className=\"sweet-loading\">\r\n          <PacmanLoader\r\n            css={override}\r\n            size={30}\r\n            color={\"#000000\"}\r\n            loading={this.state.loading}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nexport default AwesomeComponent;","import React from 'react';\r\nimport List from './components/List';\r\nimport Input from './components/Input';\r\nimport Label from './components/Label';\r\nimport Spiner from './components/Spiner';\r\nimport './App.css';\r\n\r\n\r\n  const {\r\n    Stitch,\r\n    RemoteMongoClient,\r\n    AnonymousCredential\r\n    } = require('mongodb-stitch-browser-sdk');\r\n\r\n    const client = Stitch.initializeDefaultAppClient('werhouse-pnqbo');\r\n    const db = client.getServiceClient(RemoteMongoClient.factory, 'mongodb-atlas').db('refurb');\r\n    client.auth.loginWithCredential(new AnonymousCredential());\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n      colection : \"electric\",\r\n      archive: false,\r\n\r\n      adviceNumber: null,\r\n      palletList: [],\r\n      customer: \"\",\r\n      meterType: \"\",\r\n      qty: \"\",\r\n      palletNumber: \"\",\r\n      trolleyNumber: \"\",\r\n      jobNo:\"\",\r\n      status: \"\",\r\n      description: \"\",\r\n      location1: \"\",\r\n      location2: \"\",\r\n      location3: \"\",\r\n      date: null,\r\n      scrapDate : null,\r\n      updateDate : null,\r\n      deleted: false,\r\n      search: \"\",\r\n      searchQuery:{},\r\n      spinner: true,\r\n\r\n      listVisible: true,\r\n      updateButtonVisible: false,\r\n      printVisible : false,\r\n      updateItemNo: \"\",\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n      this.pullList();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n    }\r\n\r\n    clearInput = () =>{\r\n      this.setState({\r\n      customer: \"\",\r\n      meterType: \"\",\r\n      qty: \"\",\r\n      palletNumber: \"\",\r\n      trolleyNumber: \"\",\r\n      jobNo:\"\",\r\n      status: \"\",\r\n      description: \"\",\r\n      location1: \"\",\r\n      location2: \"\",\r\n      location3: \"\",\r\n      date: null,\r\n      scrapDate : null,\r\n      updateDate : null,\r\n      updateItemNo: \"\",\r\n      printVisible: false,\r\n      });\r\n    }\r\n\r\n    listVisible = ()=>{\r\n      this.setState({\r\n        listVisible: !this.state.listVisible\r\n      })\r\n    }\r\n\r\n    updateButtonVisible = (state)=>{\r\n      this.setState({\r\n        updateButtonVisible: state\r\n      })\r\n    }\r\n\r\n    addPalletButton = () =>{\r\n      this.listVisible();\r\n      this.adviceNumber();\r\n      this.setState({\r\n        date: this.date(1000 * 60 * 60 * 24 * 0),\r\n        scrapDate: this.date(1000 * 60 * 60 * 24 * 91), // last digit = days \r\n        updateDate: null\r\n      })\r\n      \r\n    }\r\n    date = (addMonth)=>{\r\n      let date = new Date();\r\n      date = date.setMilliseconds(addMonth);\r\n      return date;\r\n    }\r\n\r\n    adviceNumber = async ()=>{\r\n      await db.collection(\"counter\").find({\"id\" : \"5e4bce1e1c9d4400005050e7\"}).toArray().then(item=>{\r\n        this.setState({adviceNumber : item[0].adviceNumberCounter});\r\n      })\r\n\r\n      await db.collection(\"counter\").updateOne(\r\n        { \"id\" : \"5e4bce1e1c9d4400005050e7\"},\r\n        { \"$set\" : { \"adviceNumberCounter\" : this.state.adviceNumber +1 }},\r\n        { \"upsert\": false }\r\n     )\r\n    }\r\n\r\n\r\n    scrapCheck = (status)=>{\r\n      return status === \"BER\" ? this.state.scrapDate : null\r\n    }\r\n\r\n\r\n  addPallet = async (e,id) =>{\r\n    var return_value=prompt(\"Do you want add this pallet?\");  \r\n    client.callFunction(\"password\" , [return_value, id]).then(async item=>{ \r\n      if(item === true){\r\n        // await db.collection(this.state.colection).deleteOne({\"_id\": { \"$oid\" : id }});\r\n        await db.collection(this.state.colection).insertOne({ owner_id : client.auth.user.id, adviceNumber: this.state.adviceNumber ,customer: this.state.customer , meterType: this.state.meterType , qty: this.state.qty , palletNumber: this.state.palletNumber , trolleyNumber : this.state.trolleyNumber , jobNo : this.state.jobNo , status : this.state.status , date: this.state.date , scrapDate: this.scrapCheck(this.state.status) , updateDate: this.state.updateDate , description : this.state.description , location1 : this.state.location1 , location2: this.state.location2, location3 :this.state.location3 , deleted: this.state.deleted})\r\n      await this.listVisible();\r\n      await this.pullList();\r\n      await this.clearInput();\r\n      \r\n      }else if(item === false){\r\n        return window.alert(\"Wrong Password!\");\r\n      }\r\n      else{\r\n          return 0\r\n      }\r\n    })\r\n    };\r\n\r\n    search = ()=>{\r\n      if(this.state.search === \"\"){\r\n        this.setState({\r\n          searchQuery:{}\r\n          // searchQuery: { itemSearch: \"deleted\" , valueSearch: false }\r\n        })\r\n      }\r\n      else if(this.state.search === \"Macquarie BG\" || this.state.search === \"Meterfit BG\" || this.state.search === \"SSE\" || this.state.search === \"Meterfit Eon\" || this.state.search === \"Macquarie Eon\" || this.state.search ===\"Parts\")\r\n        this.setState({\r\n          searchQuery: {itemSearch: \"customer\" , valueSearch: this.state.search}\r\n        })\r\n      else if(this.state.search === \"5299\" || this.state.search === \"5394\" || this.state.search === \"5424\")\r\n        this.setState({\r\n          searchQuery: {itemSearch: \"meterType\" , valueSearch: this.state.search}\r\n      })\r\n      else if(this.state.search === \"BER\" || this.state.search === \"Awaiting\" || this.state.search === \"Compleated\" || this.state.search === \"Inprogress\" || this.state.search === \"Ready to be shipped\")\r\n      this.setState({\r\n        searchQuery: {itemSearch: \"status\" , valueSearch: this.state.search}\r\n      })\r\n\r\n      // else if(this.state.search === \"Deleted\")\r\n      // this.setState({\r\n      //   searchQuery: {itemSearch: \"deleted\" , valueSearch: true}\r\n      // })\r\n      ///////\r\n    }\r\n\r\n    pullList = (search) =>{\r\n    db.collection(this.state.colection)\r\n    .find(search, {limit: 1000})   /*{\"customer\" : { \"$exists\": true }}*/\r\n    .toArray()\r\n    .then(item => {\r\n      setTimeout(()=>{\r\n        this.setState({palletList:item , spinner: false})\r\n      },0)\r\n      })\r\n    }\r\n\r\n\r\n    deleteItem = async (e,id)=>{\r\n      var return_value=prompt(\"Do you want delete this pallet?\");\r\n      client.callFunction(\"password\" , [return_value, id]).then(async item=>{ \r\n        if(item === true){\r\n          // await db.collection(this.state.colection).deleteOne({\"_id\": { \"$oid\" : id }});\r\n          await db.collection(this.state.colection).updateOne({\"_id\": { \"$oid\" : id }}, {\"$set\": {\"deleted\": true}} , { \"upsert\": false });\r\n          await this.search();\r\n          await this.pullList();\r\n        \r\n        }else if(item === false){\r\n          return window.alert(\"Wrong Password!\");\r\n        }\r\n        else{\r\n            return 0\r\n        }\r\n      })\r\n    }\r\n\r\n    // deleteItem = (e,id)=>{\r\n    //     var return_value=prompt(\"Do you want delete this pallet?\");\r\n    //     client.callFunction(\"delete\" , [return_value , id, Stitch]).then(async item=>{ \r\n    //       console.log(item)\r\n    //       if(item === true){\r\n    //         this.pullList()\r\n    //         return window.alert(\"Deleted!\");\r\n          \r\n    //       }else if(item === false){\r\n    //         return window.alert(\"Wrong Password!\");\r\n    //       }\r\n    //       else{\r\n    //           return 0\r\n    //       }\r\n    //     })\r\n    //   }\r\n\r\n\r\n    updateItem = async (e,id)=>{\r\n      db.collection(this.state.colection).find({\"_id\": { \"$oid\" : id }}).toArray().then(item=>{\r\n        this.setState({\r\n          customer : item[0].customer,\r\n          meterType: item[0].meterType,\r\n          qty: item[0].qty,\r\n          palletNumber: item[0].palletNumber,\r\n          trolleyNumber: item[0].trolleyNumber,\r\n          jobNo: item[0].jobNo,\r\n          status: item[0].status,\r\n          description: item[0].description,\r\n          location1: item[0].location1,\r\n          location2: item[0].location2,\r\n          location3: item[0].location3,\r\n          updateDate: this.date(1000 * 60 * 60 * 24 * 0),\r\n          updateItemNo: id,\r\n        })\r\n        this.listVisible();\r\n        this.updateButtonVisible(true);\r\n\r\n        \r\n      })\r\n      // await db.collection(this.state.colection).updateOne({\"_id\": { \"$oid\" : id }}, {\"$set\": {\"customer\":this.state.customer , \"meterType\": this.state.meterType , \"qty\": this.state.qty , \"palletNumber\": this.state.palletNumber , \"trolleyNumber\" : this.state.trolleyNumber , \"status\" : this.state.status , \"description\" : this.state.description , \"location\" : `${this.state.location1} - ${this.state.location2} - ${this.state.location3}` }} , { \"upsert\": false });\r\n      // // await this.clearInput();\r\n      // await this.pullList();\r\n    }\r\n\r\n    updateConfirme = async () =>{\r\n      var return_value=prompt(\"Do you want update this pallet?\");\r\n      client.callFunction(\"password\" , [return_value]).then(async item=>{\r\n      if(item === true){\r\n          await db.collection(this.state.colection).updateOne({\"_id\": { \"$oid\" : this.state.updateItemNo }}, {\"$set\": {\"customer\":this.state.customer , \"meterType\": this.state.meterType , \"qty\": this.state.qty , \"palletNumber\": this.state.palletNumber , \"trolleyNumber\" : this.state.trolleyNumber , \"jobNo\" : this.state.jobNo , \"status\" : this.state.status , \"updateDate\" : this.state.updateDate , \"description\" : this.state.description , \"location1\" : this.state.location1 , \"location2\": this.state.location2 , \"location3\" : this.state.location3 }} , { \"upsert\": false });\r\n          // await this.clearInput(); \r\n          await this.listVisible();\r\n          await this.updateButtonVisible(false);\r\n          await this.clearInput()\r\n          await this.pullList();\r\n        \r\n      }else if(item === false){\r\n        return window.alert(\"Wrong Password!\");\r\n      }\r\n      else{\r\n          return 0;\r\n      }\r\n    })\r\n    }\r\n\r\n    backButton = ()=>{\r\n      this.listVisible();\r\n      this.updateButtonVisible(false);\r\n      this.clearInput()\r\n      // console.log('back')\r\n    }\r\n\r\n    print = async () =>{\r\n      await window.print()\r\n      await this.clearInput();\r\n    }\r\n\r\n    printButton = async (e ,id) =>{\r\n      // this.setState({\r\n      //   printVisible: false,\r\n      // })\r\n\r\n      await db.collection(this.state.colection).find({\"_id\": { \"$oid\" : id }}).toArray().then(item=>{\r\n        this.setState({\r\n          customer : item[0].customer,\r\n          meterType: item[0].meterType,\r\n          qty: item[0].qty,\r\n          palletNumber: item[0].palletNumber,\r\n          trolleyNumber: item[0].trolleyNumber,\r\n          jobNo: item[0].jobNo,\r\n          status: item[0].status,\r\n          description: item[0].description,\r\n          location1: item[0].location1,\r\n          location2: item[0].location2,\r\n          location3: item[0].location3,\r\n          date: item[0].date,\r\n          scrapDate: item[0].scrapDate,\r\n          updateDate: item[0].updateDate,\r\n          updateItemNo: id,\r\n          adviceNumber: item[0].adviceNumber,\r\n          printVisible:true\r\n        })\r\n      })\r\n     await this.print();\r\n    }\r\n\r\n    // update = (e, id)=>{\r\n    //   this.updateItem(e,id);\r\n    // }\r\n\r\n    // delete = (e,id)=>{\r\n    //   this.deleteItem(id);\r\n    // }\r\n\r\n\r\n    // handleChangeSelect = (e)=>{\r\n    //   this.setState({[e.target.name]: e.target.value})\r\n    // }\r\n\r\n    handleChange = (e) =>{\r\n      this.setState({[e.target.name]: e.target.value})\r\n      // console.log(e.target)\r\n      // console.log(this.state.qty)\r\n    }\r\n\r\n    // confirmAlert = (id) =>{\r\n    //   if (window.confirm(\"Do you want delete this pallet?\")) {\r\n    //     this.deleteItem(id);\r\n    //     this.pullList();  \r\n    //   } else {\r\n    //     return 0;\r\n    //   }\r\n    \r\n    handleArchive = (e)=>{\r\n      this.setState({archive: e.target.checked})\r\n    }\r\n\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n      <div className=\"App\">\r\n        {this.state.printVisible ? <Label state={this.state}></Label> : this.state.listVisible ? <List search = {this.search} palletList = {this.state.palletList} updateItem={this.updateItem} delete={this.deleteItem} addPallet={this.addPallet} addPalletButton={this.addPalletButton} printButton={this.printButton} handleChange={this.handleChange} handleArchive={this.handleArchive} state={this.state}></List> : <Input backButton={this.backButton} updateButtonVisible={this.state.updateButtonVisible} updateConfirme={this.updateConfirme} addPalletButton={this.addPalletButton} addPallet={this.addPallet} handleChange={this.handleChange} state={this.state}></Input>}\r\n      </div>\r\n      <Spiner spinnerState={this.state.spinner}></Spiner>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}